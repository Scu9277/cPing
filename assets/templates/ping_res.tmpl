<html>
<head>
<script src="http://libs.baidu.com/jquery/2.0.0/jquery.min.js"></script>
	<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-9ndCyUaIbzAi2FUVXJi0CjmCapSmO7SnpJef0486qhLnuZ2cdeRhO02iuK6FUUVM" crossorigin="anonymous">

</head>
				<body>
					<form method="post">
						<label>URL:</label>
						<input type="text" name="url" value="{{.To}}"/>
						<button type="submit">Go</button>
					</form>
					<h3>
					Result
					</h3>
					<ul>
					{{$T := .T}}
					{{$S := .S}}
					{{$To := .To}}
						{{ $counter := 1 }}
						{{range .Client.List}}
						<li>
							Name: {{.Name}}
							<div>Count: <p class="c-{{$counter}}" style="display: inline;">0</p>x4</div>
							<div>Loss: <p class="p-{{$counter}}" style="display: inline;">0</p>%</div>
							<p class="all-loss-{{$counter}}" style="display: none;">0</p>
							<a class="mtr-toggle-{{$counter}}" data-target="#mtr-{{$counter}}">MTR=</a>
							<a class="details-toggle-{{$counter}}" data-target="#d-{{$counter}}">details+</a>
							<div id="mtr-{{$counter}}" style="display: none;">
								Loading
							</div>
							<div id="d-{{$counter}}" style="display: none;">
								<p class="s-{{$counter}}">Load</p>
								<div class="client-{{$counter}}"></div>
							</div>
						</li>
						<script>
							function mtrToTable(mtrResult) {
								// 将MTR结果分割为行
								var lines = mtrResult.split('\n');

								// 创建表格
								var htmlTable = '<table class="table table-striped">';

								// 处理每一行
								lines.forEach(function(line) {
									// 将行分割为单元格
									var cells = line.split(/\s+/);

									// 创建一行
									htmlTable += '<tr>';

									// 处理每个单元格
									cells.forEach(function(cell) {
										// 将单元格包装在<td>标签中
										if (cell!==""){
										htmlTable += '<td>' + cell + '</td>';
										}
									});

									// 关闭行标记
									htmlTable += '</tr>';
								});

								// 关闭表格标记
								htmlTable += '</table>';

								return htmlTable;
							}
							$.ajax({
								url: "site/{{.Id}}?do=mtr&s={{$S}}&t={{$T}}&to={{$To}}",
								type: "GET",
								success: function(data) {
									if (data.status == true){
										var htmlTable = mtrToTable(data.result);
										$("#mtr-{{$counter}}").html(htmlTable);
										$(".mtr-toggle-{{$counter}}").text("MTR+");
										$(".mtr-toggle-{{$counter}}").click(function() {
											var target = $(this).data("target");
											$(this).text(function(i, text) {
												return text === "MTR+" ? "MTR-" : "MTR+";
											});
											$(target).toggle();
										});
									}else{
										$("#mtr-{{$counter}}").text("Fail");
									}
								},
								error: function(xhr, status, error) {
									$("#mtr-{{$counter}}").text("Fail");
								}
							});
							for (var i = 0; i < 25; i++) {
								$.ajax({
									url: "site/{{.Id}}?do=ping&s={{$S}}&t={{$T}}&to={{$To}}",
									type: "GET",
									success: function(data) {
										if (data.status == true) {
											$(".s-{{$counter}}").text("Suc");
											var count = parseInt($(".c-{{$counter}}").text());
											var p = parseInt($(".p-{{$counter}}").text());
											var allloss = parseInt($(".all-loss-{{$counter}}").text());
											var packetLoss = parseInt(data.result.match(/(\d+)% packet loss/)[1]);
											if ((packetLoss + p) !== 0) {
												$(".all-loss-{{$counter}}").text(allloss+packetLoss);
												$(".p-{{$counter}}").text((allloss+packetLoss) / (count + 1));
											}
										} else {
											$(".s-{{$counter}}").text("Fail");
											var p = parseInt($(".p-{{$counter}}").text());
											var count = parseInt($(".c-{{$counter}}").text());
											var allloss = parseInt($(".all-loss-{{$counter}}").text());
											$(".all-loss-{{$counter}}").text(allloss+100);
											$(".p-{{$counter}}").text((100 + allloss) / (count + 1));
											console.log("计数："+count+"Loss："+p)
										}
										var count = parseInt($(".c-{{$counter}}").text());
										$(".c-{{$counter}}").text(count + 1);
										$(".client-{{$counter}}").append(data.result.replace(/\n/g, '<br>'));
									},
									error: function(xhr, status, error) {
										$(".s-{{$counter}}").text("Fail");
										$(".client-{{$counter}}").text(error);
									}
								});
							}
							$(".details-toggle-{{$counter}}").click(function() {
								var target = $(this).data("target");
								$(this).text(function(i, text) {
									return text === "details+" ? "details-" : "details+";
								});
								$(target).toggle();
							});
						</script>
						{{ $counter = add $counter 1 }}
						{{end}}
                    </ul>
				</body>
			</html>